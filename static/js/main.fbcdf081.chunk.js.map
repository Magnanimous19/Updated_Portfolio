{"version":3,"sources":["image/me.jpg","image/project1.png","image/LIRIbot.png","image/train.png","image/resume.pdf","components/Navitem.js","components/Navbar.js","contents/Home.js","contents/About.js","contents/Skills.js","contents/Project.js","contents/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navitem","id","this","props","item","to","tolink","onClick","activec","bind","Component","Navbar","activeitem","x","state","NavItemActive","length","document","getElementById","classList","remove","setState","add","Home","className","src","profilepic","text","speed","eraseDelay","About","Skills","myskills","map","value","Project","href","memepic","LIRIpic","trainpic","Contact","Resume","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fbcdf081.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.0ee5a875.jpg\";","module.exports = __webpack_public_path__ + \"static/media/project1.bfce7a88.png\";","module.exports = __webpack_public_path__ + \"static/media/LIRIbot.9851f2fd.png\";","module.exports = __webpack_public_path__ + \"static/media/train.0824c898.png\";","module.exports = __webpack_public_path__ + \"static/media/resume.df2a8845.pdf\";","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navitem extends Component{\r\n    render() {\r\n        return (\r\n            <li id={this.props.item}>\r\n                <Link to={this.props.tolink} onClick={\r\n                    this.props.activec.bind(this,this.props.item)\r\n                }>{this.props.item}\r\n                </Link>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n    \r\nexport default Navitem","import React, { Component } from 'react';\r\nimport Navitem from './Navitem';\r\n\r\nclass Navbar extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            'NavItemActive':''\r\n        }\r\n    }\r\n    activeitem=(x)=>\r\n    {\r\n        if(this.state.NavItemActive.length>0){\r\n            document.getElementById(this.state.NavItemActive).classList.remove('active');\r\n        }\r\n        this.setState({'NavItemActive':x},()=>{\r\n            document.getElementById(this.state.NavItemActive).classList.add('active');\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <nav>\r\n            <ul>\r\n                <Navitem item=\"Home\" tolink=\"/\"  activec={this.activeitem}></Navitem>\r\n                <Navitem item=\"About\" tolink=\"/about\"  activec={this.activeitem}></Navitem>\r\n                <Navitem item=\"Skills\" tolink=\"/skills\"  activec={this.activeitem}></Navitem>\r\n                <Navitem item=\"Project\" tolink=\"/project\"  activec={this.activeitem}></Navitem>\r\n                <Navitem item=\"Contact\" tolink=\"/contact\"  activec={this.activeitem}></Navitem>\r\n            </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n    \r\n    export default Navbar","import React, { Component } from 'react';\r\nimport ReactTypingEffect from 'react-typing-effect';\r\nimport profilepic from \"../image/me.jpg\";\r\n\r\n    class Home extends Component {\r\n        render() {\r\n            return (\r\n                <div className=\"condiv home\">  \r\n                    <img src={profilepic} className=\"profilepic\"></img>                  \r\n                    <ReactTypingEffect className=\"typingeffect\" text={[\"Hello, I'm Reid Burns\" , \"I am a web developer\"]} speed={100} eraseDelay={700}/>                    \r\n                </div>)\r\n        }\r\n    }\r\n                            \r\n                                                        \r\n                            \r\nexport default Home","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"condiv\">\r\n                <h1 className=\"subtopic\">About Me</h1>\r\n                <h2>Hey there, </h2>\r\n                <h2>I'm Reid Burns</h2>\r\n\r\n                <br></br>\r\n                \r\n                <h3><u>Full Stack Web Developer</u></h3>\r\n\r\n                <br></br>\r\n\r\n                <p>I've lived in Okinawa, Japan for over 18 years and consider it home. I can still speak, read, and write Japanese even though \r\n                I've forgotten so much since moving to the states 4 years ago.\r\n                <br></br>\r\n                Since I can remember I've always enjoyed creating and building things whether it's from building a drift car to building programs with code.  \r\n                One of my long-term goals is to start a programming career back home in Japan.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About","import React, { Component } from 'react'\r\n\r\nclass Skills extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={'myskills':['HTML','CSS','JS', 'REACT JS','FIREBASE','MONGO']};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"condiv skills\">\r\n            <h1 className=\"subtopic\">My Skills</h1>\r\n                <ul>\r\n                    {this.state.myskills.map((value)=>{return <li>{value}</li>})}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                        \r\n                        \r\n                    \r\n                    \r\n                    \r\nexport default Skills","import React, { Component } from 'react';\r\nimport memepic from \"../image/project1.png\";\r\nimport LIRIpic from \"../image/LIRIbot.png\";\r\nimport trainpic from \"../image/train.png\";\r\n\r\nclass Project extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"condiv\">\r\n            <h1 className=\"subtopic\">Projects</h1>\r\n\r\n            <h2><p>Meme Generator: Type any word and receive a random Gif and Reddit Comment</p></h2>\r\n            <h3><a href=\"https://github.com/ChristineDang/OdincoGaming\"> Meme Generator</a></h3>\r\n            <img src={memepic} className=\"memepic\"></img>            \r\n\r\n            <br></br>\r\n\r\n            <h2><p>LIRI Bot: LIRI will be a command line node app that takes in parameters and give you back data.</p></h2>\r\n            <h3><a href=\"https://github.com/Magnanimous19/LIRIBot\"> LIRI Bot</a></h3>\r\n            <img src={LIRIpic} className=\"LIRIpic\"></img>             \r\n\r\n            <br></br>\r\n\r\n            <h2><p>Train Scheduler: Uses Firebase to add and host arrival/departure times of trains</p></h2>\r\n            <h3><a href=\"https://github.com/Magnanimous19/TrainScheduler\"> Train Scheduler</a></h3>\r\n            <img src={trainpic} className=\"trainpic\"></img>           \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n    \r\nexport default Project","import React, { Component } from 'react';\r\nimport Resume from \"../image/resume.pdf\";\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"condiv\"><h1 className=\"subtopic\">Contact Me</h1>\r\n                <h2>Email  :   reidburnsy19@hotmail.com</h2>\r\n                <h2>Github   :  <a href=\"https://github.com/Magnanimous19?tab=repositories\"> Magnanimous19</a> </h2>\r\n                <h2>Linkedin    : <a href=\"https://www.linkedin.com/in/reid-burns-79b86219a/\">Reid Burns</a></h2>\r\n                <h2>Resume  : <a href= {Resume}>Resume</a></h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact","import React from 'react';\nimport './App.css';\nimport{BrowserRouter as Router,Route,} from \"react-router-dom\";\nimport Navbar from './components/Navbar';\nimport Home from './contents/Home';\nimport About from './contents/About';\nimport Skills from './contents/Skills';\nimport Project from './contents/Project';\nimport Contact from './contents/Contact';\n\n  function App() {\n    return (\n\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n\n          {/* Route for Home.js Contents */}\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n\n          {/*Route for About.js contents */}\n          <Route path=\"/about\">\n            <About />\n          </Route>\n\n          {/*Route for Skills.js contents */}\n          <Route path=\"/skills\">\n            <Skills />\n          </Route>\n\n          {/*Route for Projects.js contents */}\n          <Route path=\"/project\">\n            <Project />\n          </Route>\n\n          {/*Route for Contact.js contents */}\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n\n        </div>\n      </Router>\n\n    );\n  }\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}